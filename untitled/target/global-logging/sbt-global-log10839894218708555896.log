[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 17)
[debug] Load.defaultLoad until apply took 90.4048ms
[debug]           Load.loadUnit: plugins took 92.0724ms
[debug]           Load.loadUnit: defsScala took 0.3754ms
[debug] [Loading] Scanning directory C:\Users\nikod\eclipse-workspace\untitled\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\nikod\eclipse-workspace\untitled\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.3745 ms
[debug]               Load.resolveProject(untitled-build) took 52.9235ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled-build, base: C:\Users\nikod\eclipse-workspace\untitled\project, plugins: List(<none>))) took 96.3313ms
[debug] [Loading] Done in C:\Users\nikod\eclipse-workspace\untitled\project, returning: (untitled-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 118.3339ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.2617ms
[debug]         Load.loadUnit(file:/C:/Users/nikod/eclipse-workspace/untitled/project/, ...) took 218.2074ms
[debug]       Load.apply: load took 398.4212ms
[debug]       Load.apply: resolveProjects took 7.6821ms
[debug]       Load.apply: finalTransforms took 63.1046ms
[debug]       Load.apply: config.delegates took 7.2375ms
[debug]       Load.apply: Def.make(settings)... took 327.9718ms
[debug]       Load.apply: structureIndex took 77.6071ms
[debug]       Load.apply: mkStreams took 1.5703ms
[info] loading project definition from C:\Users\nikod\eclipse-workspace\untitled\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2448.4613ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\nikod\eclipse-workspace\untitled
[debug]       Load.loadUnit: mkEval took 4.7489ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1617 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.8994ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\nikod\eclipse-workspace\untitled, plugins: List(<none>))) took 6.0485ms
[debug] [Loading] Done in C:\Users\nikod\eclipse-workspace\untitled, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3045.6773ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.4784ms
[debug]   Load.loadUnit(file:/C:/Users/nikod/eclipse-workspace/untitled/, ...) took 5505.6462ms
[debug] Load.apply: load took 5524.9093ms
[debug] Load.apply: resolveProjects took 0.225ms
[debug] Load.apply: finalTransforms took 13.0661ms
[debug] Load.apply: config.delegates took 0.4572ms
[debug] Load.apply: Def.make(settings)... took 89.3378ms
[debug] Load.apply: structureIndex took 39.1485ms
[debug] Load.apply: mkStreams took 0.0036ms
[info] set current project to untitled (in build file:/C:/Users/nikod/eclipse-workspace/untitled/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-7dd8b1ef11376c0918cf
[debug] Writing bsp connection file
[info] started sbt server
